/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head==NULL)
            return false;
        // map<ListNode*, int> address;
        // while(head!=NULL){
        //     address[head]++;
        //     if(address[head]>1)
        //         return true;
        //     head = head->next;
        // }
        ListNode* node = head;
        head = head->next;
        while(head!=NULL && head->next!=NULL){
            if(node==head)
                return true;
            node = node->next;
            head = head->next->next;
        }
        return false;
    }
};