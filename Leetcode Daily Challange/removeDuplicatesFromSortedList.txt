/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
//(Not a good approach, should use iteration instead)
class Solution {
    void delDup(ListNode* node, ListNode* prev){
        if(node){
            if(!prev || prev->val != node->val)
                delDup(node->next, node);
            else {
                prev->next = node->next;
                delDup(node->next, prev);
            }
        }
    }
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* prev = NULL;
        delDup(head, prev);
        return head;
    }
};
